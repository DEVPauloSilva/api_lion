generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Empresa {
  empresa_id  String        @id @default(uuid())
  email       String        @unique
  cnpj        String        @unique
  name        String
  contato     String
  endereco    String
  tipo        String        // "locadora", "ferragista", "ambos"
  usuario     Usuario[]
  vendaDiaria caixaDiario[]
  veiculos    Veiculos[]
  clientes       Clientes[]
}

model Usuario {
  usuario_id     String        @id @default(uuid())
  userName       String        @unique
  password       String
  name           String
  empresa_id     String
  produtos       Produtos[]
  empresa        Empresa       @relation(fields: [empresa_id], references: [empresa_id])
  vendaDiaria    caixaDiario[]
}

model caixaDiario {
  caixa_id            String   @id @default(uuid())
  valorCartaoMaquina1 Float
  valorCartaoMaquina2 Float
  valorDinheiro       Float
  valorPix            Float
  valorentrada        Float
  valorFinal          Float
  saida               Float
  totalDiario         Float
  dataLancamento      DateTime @default(now())
  empresa_id          String
  usuario_id          String
  fechado             Boolean
  company             Empresa  @relation(fields: [empresa_id], references: [empresa_id])
  user                Usuario  @relation(fields: [usuario_id], references: [usuario_id])
}

model Produtos {
  produto_id   String       @id @default(uuid())
  nome_produto String
  preco        Float?
  marca        String?
  status       String
  usuario_id   String
  usuario      Usuario      @relation(fields: [usuario_id], references: [usuario_id])
}

model Clientes {
  cliente_id String   @id @default(uuid())
  nome       String
  cpf        String?
  telefone   String?
  endereco   String?
  empresa_id String
  blacklist           Boolean  @default(false)  // Indica se o cliente está na blacklist
  instituicao_negativado String?
  empresa       Empresa  @relation(fields: [empresa_id], references: [empresa_id])
  aluguel    Aluguel[]
}
model Veiculos {
  veiculo_id    String  @id @default(uuid())
  modelo        String
  marca         String
  placa         String  @unique
  ano           Int
  status        String  // Disponível, Alugado, Manutenção
  empresa_id    String
  empresa       Empresa @relation(fields: [empresa_id], references: [empresa_id])
  alugueis      Aluguel[]
}

model Aluguel {
  aluguel_id    String   @id @default(uuid())
  cliente_id    String
  veiculo_id    String
  dataInicio    DateTime
  dataFim       DateTime?
  valorTotal    Float
  status        String   // Ativo, Finalizado, Cancelado
  cliente       Clientes @relation(fields: [cliente_id], references: [cliente_id])
  veiculo       Veiculos @relation(fields: [veiculo_id], references: [veiculo_id])
}


